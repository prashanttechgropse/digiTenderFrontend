{"ast":null,"code":"import { apiendpoint } from \"../config.json\";\nimport httpService from \"./httpService\";\nimport { toast } from \"react-toastify\";\nexport async function setUpProfileService(formData) {\n  try {\n    const {\n      data,\n      headers\n    } = await httpService.post(`${apiendpoint}/setUpProfile`, formData);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return data.stake;\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\nexport async function authentication(formData) {\n  try {\n    const {\n      data,\n      headers\n    } = await httpService.post(`${apiendpoint}/login`, {\n      email: formData.email,\n      password: formData.password\n    });\n    localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return data.stake;\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\nexport async function createAccount(formData) {\n  try {\n    await httpService.post(`${apiendpoint}/register`, formData);\n    await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: formData.email\n    });\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\nexport async function otpVerification(formData, email) {\n  try {\n    const {\n      headers\n    } = await httpService.post(`${apiendpoint}/otpVerification`, {\n      email: email,\n      otp: formData.otp\n    });\n    console.log(headers);\n    localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}","map":{"version":3,"sources":["/Users/prashantkansal/Desktop/techgropse/digiTender/digiTenderFrontend/src/services/registerServices.js"],"names":["apiendpoint","httpService","toast","setUpProfileService","formData","data","headers","post","success","message","stake","ex","response","error","authentication","email","password","localStorage","setItem","createAccount","otpVerification","otp","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,eAAeC,mBAAf,CAAmCC,QAAnC,EAA6C;AAClD,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,MAAML,WAAW,CAACM,IAAZ,CAC7B,GAAEP,WAAY,eADe,EAE9BI,QAF8B,CAAhC;AAKAF,IAAAA,KAAK,CAACM,OAAN,CAAcH,IAAI,CAACI,OAAnB;AACA,QAAI,CAACJ,IAAI,CAACI,OAAV,EAAmBP,KAAK,CAACM,OAAN,CAAcH,IAAd;AACnB,WAAOA,IAAI,CAACK,KAAZ;AACD,GATD,CASE,OAAOC,EAAP,EAAW;AACX,QAAIA,EAAE,CAACC,QAAP,EAAiBV,KAAK,CAACW,KAAN,CAAYF,EAAE,CAACC,QAAH,CAAYP,IAAxB;AAClB;AACF;AAED,OAAO,eAAeS,cAAf,CAA8BV,QAA9B,EAAwC;AAC7C,MAAI;AACF,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAoB,MAAML,WAAW,CAACM,IAAZ,CAAkB,GAAEP,WAAY,QAAhC,EAAyC;AACvEe,MAAAA,KAAK,EAAEX,QAAQ,CAACW,KADuD;AAEvEC,MAAAA,QAAQ,EAAEZ,QAAQ,CAACY;AAFoD,KAAzC,CAAhC;AAIAC,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BZ,OAAO,CAAC,cAAD,CAArC;AACAJ,IAAAA,KAAK,CAACM,OAAN,CAAcH,IAAI,CAACI,OAAnB;AACA,QAAI,CAACJ,IAAI,CAACI,OAAV,EAAmBP,KAAK,CAACM,OAAN,CAAcH,IAAd;AACnB,WAAOA,IAAI,CAACK,KAAZ;AACD,GATD,CASE,OAAOC,EAAP,EAAW;AACX,QAAIA,EAAE,CAACC,QAAP,EAAiBV,KAAK,CAACW,KAAN,CAAYF,EAAE,CAACC,QAAH,CAAYP,IAAxB;AAClB;AACF;AAED,OAAO,eAAec,aAAf,CAA6Bf,QAA7B,EAAuC;AAC5C,MAAI;AACF,UAAMH,WAAW,CAACM,IAAZ,CAAkB,GAAEP,WAAY,WAAhC,EAA4CI,QAA5C,CAAN;AACA,UAAMH,WAAW,CAACM,IAAZ,CAAkB,GAAEP,WAAY,gBAAhC,EAAiD;AACrDe,MAAAA,KAAK,EAAEX,QAAQ,CAACW;AADqC,KAAjD,CAAN;AAGD,GALD,CAKE,OAAOJ,EAAP,EAAW;AACX,QAAIA,EAAE,CAACC,QAAP,EAAiBV,KAAK,CAACW,KAAN,CAAYF,EAAE,CAACC,QAAH,CAAYP,IAAxB;AAClB;AACF;AAED,OAAO,eAAee,eAAf,CAA+BhB,QAA/B,EAAyCW,KAAzC,EAAgD;AACrD,MAAI;AACF,UAAM;AAAET,MAAAA;AAAF,QAAc,MAAML,WAAW,CAACM,IAAZ,CACvB,GAAEP,WAAY,kBADS,EAExB;AACEe,MAAAA,KAAK,EAAEA,KADT;AAEEM,MAAAA,GAAG,EAAEjB,QAAQ,CAACiB;AAFhB,KAFwB,CAA1B;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,OAAZ;AACAW,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BZ,OAAO,CAAC,cAAD,CAArC;AACD,GAVD,CAUE,OAAOK,EAAP,EAAW;AACX,QAAIA,EAAE,CAACC,QAAP,EAAiBV,KAAK,CAACW,KAAN,CAAYF,EAAE,CAACC,QAAH,CAAYP,IAAxB;AAClB;AACF","sourcesContent":["import { apiendpoint } from \"../config.json\";\nimport httpService from \"./httpService\";\nimport { toast } from \"react-toastify\";\n\nexport async function setUpProfileService(formData) {\n  try {\n    const { data, headers } = await httpService.post(\n      `${apiendpoint}/setUpProfile`,\n      formData\n    );\n\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return data.stake;\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n\nexport async function authentication(formData) {\n  try {\n    const { data, headers } = await httpService.post(`${apiendpoint}/login`, {\n      email: formData.email,\n      password: formData.password,\n    });\n    localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return data.stake;\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n\nexport async function createAccount(formData) {\n  try {\n    await httpService.post(`${apiendpoint}/register`, formData);\n    await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: formData.email,\n    });\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n\nexport async function otpVerification(formData, email) {\n  try {\n    const { headers } = await httpService.post(\n      `${apiendpoint}/otpVerification`,\n      {\n        email: email,\n        otp: formData.otp,\n      }\n    );\n    console.log(headers);\n    localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}