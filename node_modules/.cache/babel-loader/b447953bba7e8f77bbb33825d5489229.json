{"ast":null,"code":"import { apiendpoint } from \"../config.json\";\nimport httpService from \"./httpService\";\nimport { toast } from \"react-toastify\";\nimport ForgotPassword from \"../macroComponents/forgotPasswordForm\";\nimport ResetPassword from \"../macroComponents/resetPassword\";\nexport async function createAccount(formData) {\n  try {\n    await httpService.post(`${apiendpoint}/register`, formData);\n    const {\n      data\n    } = await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: formData.email\n    });\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return {\n      data\n    };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return {\n      error\n    };\n  }\n}\nexport async function setUpProfileService(formData) {\n  try {\n    const {\n      data\n    } = await httpService.post(`${apiendpoint}/setUpProfile`, formData);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return {\n      data\n    };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return {\n      error\n    };\n  }\n}\nexport async function authentication(formData) {\n  try {\n    const {\n      data,\n      headers\n    } = await httpService.post(`${apiendpoint}/login`, {\n      email: formData.email,\n      password: formData.password\n    });\n    await localStorage.removeItem(\"token\");\n    await localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return {\n      data\n    };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return {\n      error\n    };\n  }\n}\nexport async function otpVerification(formData, email) {\n  try {\n    const {\n      data,\n      headers\n    } = await httpService.post(`${apiendpoint}/otpVerification`, {\n      email: email,\n      otp: formData.otp\n    });\n    await localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return {\n      data\n    };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return {\n      error\n    };\n  }\n}\nexport async function forgotPassword(email) {\n  try {\n    const {\n      data\n    } = await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: email\n    });\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return {\n      data\n    };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return {\n      error\n    };\n  }\n}\nexport async function resetPassword() {\n  try {\n    await httpService.post(`${apiendpoint}/resetPassword`, formData);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}","map":{"version":3,"sources":["/Users/prashantkansal/Desktop/techgropse/digiTender/digiTenderFrontend/src/services/registerServices.js"],"names":["apiendpoint","httpService","toast","ForgotPassword","ResetPassword","createAccount","formData","post","data","email","success","message","error","response","setUpProfileService","authentication","headers","password","localStorage","removeItem","setItem","otpVerification","otp","forgotPassword","resetPassword","ex"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AACA,OAAOC,cAAP,MAA2B,uCAA3B;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AAEA,OAAO,eAAeC,aAAf,CAA6BC,QAA7B,EAAuC;AAC5C,MAAI;AACF,UAAML,WAAW,CAACM,IAAZ,CAAkB,GAAEP,WAAY,WAAhC,EAA4CM,QAA5C,CAAN;AACA,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMP,WAAW,CAACM,IAAZ,CAAkB,GAAEP,WAAY,gBAAhC,EAAiD;AACtES,MAAAA,KAAK,EAAEH,QAAQ,CAACG;AADsD,KAAjD,CAAvB;AAGAP,IAAAA,KAAK,CAACQ,OAAN,CAAcF,IAAI,CAACG,OAAnB;AACA,QAAI,CAACH,IAAI,CAACG,OAAV,EAAmBT,KAAK,CAACQ,OAAN,CAAcF,IAAd;AACnB,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD,GARD,CAQE,OAAOI,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoBX,KAAK,CAACU,KAAN,CAAYA,KAAK,CAACC,QAAN,CAAeL,IAA3B;AACpB,WAAO;AAAEI,MAAAA;AAAF,KAAP;AACD;AACF;AAED,OAAO,eAAeE,mBAAf,CAAmCR,QAAnC,EAA6C;AAClD,MAAI;AACF,UAAM;AAAEE,MAAAA;AAAF,QAAW,MAAMP,WAAW,CAACM,IAAZ,CACpB,GAAEP,WAAY,eADM,EAErBM,QAFqB,CAAvB;AAIAJ,IAAAA,KAAK,CAACQ,OAAN,CAAcF,IAAI,CAACG,OAAnB;AACA,QAAI,CAACH,IAAI,CAACG,OAAV,EAAmBT,KAAK,CAACQ,OAAN,CAAcF,IAAd;AACnB,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD,GARD,CAQE,OAAOI,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoBX,KAAK,CAACU,KAAN,CAAYA,KAAK,CAACC,QAAN,CAAeL,IAA3B;AACpB,WAAO;AAAEI,MAAAA;AAAF,KAAP;AACD;AACF;AAED,OAAO,eAAeG,cAAf,CAA8BT,QAA9B,EAAwC;AAC7C,MAAI;AACF,UAAM;AAAEE,MAAAA,IAAF;AAAQQ,MAAAA;AAAR,QAAoB,MAAMf,WAAW,CAACM,IAAZ,CAAkB,GAAEP,WAAY,QAAhC,EAAyC;AACvES,MAAAA,KAAK,EAAEH,QAAQ,CAACG,KADuD;AAEvEQ,MAAAA,QAAQ,EAAEX,QAAQ,CAACW;AAFoD,KAAzC,CAAhC;AAIA,UAAMC,YAAY,CAACC,UAAb,CAAwB,OAAxB,CAAN;AACA,UAAMD,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,OAAO,CAAC,cAAD,CAArC,CAAN;AACAd,IAAAA,KAAK,CAACQ,OAAN,CAAcF,IAAI,CAACG,OAAnB;AACA,QAAI,CAACH,IAAI,CAACG,OAAV,EAAmBT,KAAK,CAACQ,OAAN,CAAcF,IAAd;AACnB,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD,GAVD,CAUE,OAAOI,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoBX,KAAK,CAACU,KAAN,CAAYA,KAAK,CAACC,QAAN,CAAeL,IAA3B;AACpB,WAAO;AAAEI,MAAAA;AAAF,KAAP;AACD;AACF;AAED,OAAO,eAAeS,eAAf,CAA+Bf,QAA/B,EAAyCG,KAAzC,EAAgD;AACrD,MAAI;AACF,UAAM;AAAED,MAAAA,IAAF;AAAQQ,MAAAA;AAAR,QAAoB,MAAMf,WAAW,CAACM,IAAZ,CAC7B,GAAEP,WAAY,kBADe,EAE9B;AACES,MAAAA,KAAK,EAAEA,KADT;AAEEa,MAAAA,GAAG,EAAEhB,QAAQ,CAACgB;AAFhB,KAF8B,CAAhC;AAOA,UAAMJ,YAAY,CAACE,OAAb,CAAqB,OAArB,EAA8BJ,OAAO,CAAC,cAAD,CAArC,CAAN;AACAd,IAAAA,KAAK,CAACQ,OAAN,CAAcF,IAAI,CAACG,OAAnB;AACA,QAAI,CAACH,IAAI,CAACG,OAAV,EAAmBT,KAAK,CAACQ,OAAN,CAAcF,IAAd;AACnB,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD,GAZD,CAYE,OAAOI,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoBX,KAAK,CAACU,KAAN,CAAYA,KAAK,CAACC,QAAN,CAAeL,IAA3B;AACpB,WAAO;AAAEI,MAAAA;AAAF,KAAP;AACD;AACF;AAED,OAAO,eAAeW,cAAf,CAA8Bd,KAA9B,EAAqC;AAC1C,MAAI;AACF,UAAM;AAAED,MAAAA;AAAF,QAAW,MAAMP,WAAW,CAACM,IAAZ,CAAkB,GAAEP,WAAY,gBAAhC,EAAiD;AACtES,MAAAA,KAAK,EAAEA;AAD+D,KAAjD,CAAvB;AAGAP,IAAAA,KAAK,CAACQ,OAAN,CAAcF,IAAI,CAACG,OAAnB;AACA,QAAI,CAACH,IAAI,CAACG,OAAV,EAAmBT,KAAK,CAACQ,OAAN,CAAcF,IAAd;AACnB,WAAO;AAAEA,MAAAA;AAAF,KAAP;AACD,GAPD,CAOE,OAAOI,KAAP,EAAc;AACd,QAAIA,KAAK,CAACC,QAAV,EAAoBX,KAAK,CAACU,KAAN,CAAYA,KAAK,CAACC,QAAN,CAAeL,IAA3B;AACpB,WAAO;AAAEI,MAAAA;AAAF,KAAP;AACD;AACF;AAED,OAAO,eAAeY,aAAf,GAA+B;AACpC,MAAI;AACF,UAAMvB,WAAW,CAACM,IAAZ,CAAkB,GAAEP,WAAY,gBAAhC,EAAiDM,QAAjD,CAAN;AACD,GAFD,CAEE,OAAOmB,EAAP,EAAW;AACX,QAAIA,EAAE,CAACZ,QAAP,EAAiBX,KAAK,CAACU,KAAN,CAAYa,EAAE,CAACZ,QAAH,CAAYL,IAAxB;AAClB;AACF","sourcesContent":["import { apiendpoint } from \"../config.json\";\nimport httpService from \"./httpService\";\nimport { toast } from \"react-toastify\";\nimport ForgotPassword from \"../macroComponents/forgotPasswordForm\";\nimport ResetPassword from \"../macroComponents/resetPassword\";\n\nexport async function createAccount(formData) {\n  try {\n    await httpService.post(`${apiendpoint}/register`, formData);\n    const { data } = await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: formData.email,\n    });\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return { data };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return { error };\n  }\n}\n\nexport async function setUpProfileService(formData) {\n  try {\n    const { data } = await httpService.post(\n      `${apiendpoint}/setUpProfile`,\n      formData\n    );\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return { data };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return { error };\n  }\n}\n\nexport async function authentication(formData) {\n  try {\n    const { data, headers } = await httpService.post(`${apiendpoint}/login`, {\n      email: formData.email,\n      password: formData.password,\n    });\n    await localStorage.removeItem(\"token\");\n    await localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return { data };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return { error };\n  }\n}\n\nexport async function otpVerification(formData, email) {\n  try {\n    const { data, headers } = await httpService.post(\n      `${apiendpoint}/otpVerification`,\n      {\n        email: email,\n        otp: formData.otp,\n      }\n    );\n    await localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return { data };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return { error };\n  }\n}\n\nexport async function forgotPassword(email) {\n  try {\n    const { data } = await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: email,\n    });\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return { data };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return { error };\n  }\n}\n\nexport async function resetPassword() {\n  try {\n    await httpService.post(`${apiendpoint}/resetPassword`, formData);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}