{"ast":null,"code":"import { apiendpoint } from \"../config.json\";\nimport httpService from \"./httpService\";\nimport { toast } from \"react-toastify\";\nexport async function setUpProfileService(formData) {\n  await httpService.post(`${apiendpoint}/setUpProfile`, formData);\n}\nexport async function authentication(formData) {\n  try {\n    const response = await httpService.post(`${apiendpoint}/login`, {\n      email: formData.email,\n      password: formData.password\n    });\n    console.log(response.headers);\n    return localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\nexport async function createAccount(formData) {\n  try {\n    await httpService.post(`${apiendpoint}/register`, formData);\n    await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: formData.email\n    });\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\nexport async function otpVerification(formData, email) {\n  try {\n    const {\n      headers\n    } = await httpService.post(`${apiendpoint}/otpVerification`, {\n      email: email,\n      otp: formData.otp\n    });\n    console.log(headers);\n    return localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}","map":{"version":3,"sources":["/Users/prashantkansal/Desktop/techgropse/digiTender/digiTenderFrontend/src/services/registerServices.js"],"names":["apiendpoint","httpService","toast","setUpProfileService","formData","post","authentication","response","email","password","console","log","headers","localStorage","setItem","ex","error","data","createAccount","otpVerification","otp"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,eAAeC,mBAAf,CAAmCC,QAAnC,EAA6C;AAClD,QAAMH,WAAW,CAACI,IAAZ,CAAkB,GAAEL,WAAY,eAAhC,EAAgDI,QAAhD,CAAN;AACD;AAED,OAAO,eAAeE,cAAf,CAA8BF,QAA9B,EAAwC;AAC7C,MAAI;AACF,UAAMG,QAAQ,GAAG,MAAMN,WAAW,CAACI,IAAZ,CAAkB,GAAEL,WAAY,QAAhC,EAAyC;AAC9DQ,MAAAA,KAAK,EAAEJ,QAAQ,CAACI,KAD8C;AAE9DC,MAAAA,QAAQ,EAAEL,QAAQ,CAACK;AAF2C,KAAzC,CAAvB;AAIAC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACK,OAArB;AACA,WAAOC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,QAAQ,CAACK,OAAT,CAAiB,cAAjB,CAA9B,CAAP;AACD,GAPD,CAOE,OAAOG,EAAP,EAAW;AACX,QAAIA,EAAE,CAACR,QAAP,EAAiBL,KAAK,CAACc,KAAN,CAAYD,EAAE,CAACR,QAAH,CAAYU,IAAxB;AAClB;AACF;AAED,OAAO,eAAeC,aAAf,CAA6Bd,QAA7B,EAAuC;AAC5C,MAAI;AACF,UAAMH,WAAW,CAACI,IAAZ,CAAkB,GAAEL,WAAY,WAAhC,EAA4CI,QAA5C,CAAN;AACA,UAAMH,WAAW,CAACI,IAAZ,CAAkB,GAAEL,WAAY,gBAAhC,EAAiD;AACrDQ,MAAAA,KAAK,EAAEJ,QAAQ,CAACI;AADqC,KAAjD,CAAN;AAGD,GALD,CAKE,OAAOO,EAAP,EAAW;AACX,QAAIA,EAAE,CAACR,QAAP,EAAiBL,KAAK,CAACc,KAAN,CAAYD,EAAE,CAACR,QAAH,CAAYU,IAAxB;AAClB;AACF;AAED,OAAO,eAAeE,eAAf,CAA+Bf,QAA/B,EAAyCI,KAAzC,EAAgD;AACrD,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAc,MAAMX,WAAW,CAACI,IAAZ,CACvB,GAAEL,WAAY,kBADS,EAExB;AACEQ,MAAAA,KAAK,EAAEA,KADT;AAEEY,MAAAA,GAAG,EAAEhB,QAAQ,CAACgB;AAFhB,KAFwB,CAA1B;AAOAV,IAAAA,OAAO,CAACC,GAAR,CAAYC,OAAZ;AACA,WAAOC,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BF,OAAO,CAAC,cAAD,CAArC,CAAP;AACD,GAVD,CAUE,OAAOG,EAAP,EAAW;AACX,QAAIA,EAAE,CAACR,QAAP,EAAiBL,KAAK,CAACc,KAAN,CAAYD,EAAE,CAACR,QAAH,CAAYU,IAAxB;AAClB;AACF","sourcesContent":["import { apiendpoint } from \"../config.json\";\nimport httpService from \"./httpService\";\nimport { toast } from \"react-toastify\";\n\nexport async function setUpProfileService(formData) {\n  await httpService.post(`${apiendpoint}/setUpProfile`, formData);\n}\n\nexport async function authentication(formData) {\n  try {\n    const response = await httpService.post(`${apiendpoint}/login`, {\n      email: formData.email,\n      password: formData.password,\n    });\n    console.log(response.headers);\n    return localStorage.setItem(\"token\", response.headers[\"x-auth-token\"]);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n\nexport async function createAccount(formData) {\n  try {\n    await httpService.post(`${apiendpoint}/register`, formData);\n    await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: formData.email,\n    });\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n\nexport async function otpVerification(formData, email) {\n  try {\n    const { headers } = await httpService.post(\n      `${apiendpoint}/otpVerification`,\n      {\n        email: email,\n        otp: formData.otp,\n      }\n    );\n    console.log(headers);\n    return localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}