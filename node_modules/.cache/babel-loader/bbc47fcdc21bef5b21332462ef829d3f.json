{"ast":null,"code":"import { apiendpoint } from \"../config.json\";\nimport httpService from \"./httpService\";\nimport { toast } from \"react-toastify\";\nexport async function createAccount(formData) {\n  try {\n    const {\n      data: registerData\n    } = await httpService.post(`${apiendpoint}/register`, formData);\n    const {\n      data\n    } = await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: formData.email\n    });\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return {\n      data\n    };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return {\n      error\n    };\n  }\n}\nexport async function setUpProfileService(formData) {\n  try {\n    const {\n      data\n    } = await httpService.post(`${apiendpoint}/setUpProfile`, formData);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return {\n      data\n    };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return {\n      error\n    };\n  }\n}\nexport async function authentication(formData) {\n  try {\n    const {\n      data,\n      headers\n    } = await httpService.post(`${apiendpoint}/login`, {\n      email: formData.email,\n      password: formData.password\n    });\n    localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return {\n      data\n    };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return {\n      error\n    };\n  }\n}\nexport async function otpVerification(formData, email) {\n  try {\n    const {\n      data,\n      headers\n    } = await httpService.post(`${apiendpoint}/otpVerification`, {\n      email: email,\n      otp: formData.otp\n    });\n    localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return {\n      data\n    };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return {\n      error\n    };\n  }\n}","map":{"version":3,"sources":["/Users/prashantkansal/Desktop/techgropse/digiTender/digiTenderFrontend/src/services/registerServices.js"],"names":["apiendpoint","httpService","toast","createAccount","formData","data","registerData","post","email","success","message","error","response","setUpProfileService","authentication","headers","password","localStorage","setItem","otpVerification","otp"],"mappings":"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","sourcesContent":["import { apiendpoint } from \"../config.json\";\nimport httpService from \"./httpService\";\nimport { toast } from \"react-toastify\";\n\nexport async function createAccount(formData) {\n  try {\n    const { data: registerData } = await httpService.post(\n      `${apiendpoint}/register`,\n      formData\n    );\n    const { data } = await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: formData.email,\n    });\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return { data };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return { error };\n  }\n}\n\nexport async function setUpProfileService(formData) {\n  try {\n    const { data } = await httpService.post(\n      `${apiendpoint}/setUpProfile`,\n      formData\n    );\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return { data };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return { error };\n  }\n}\n\nexport async function authentication(formData) {\n  try {\n    const { data, headers } = await httpService.post(`${apiendpoint}/login`, {\n      email: formData.email,\n      password: formData.password,\n    });\n    localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return { data };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return { error };\n  }\n}\n\nexport async function otpVerification(formData, email) {\n  try {\n    const { data, headers } = await httpService.post(\n      `${apiendpoint}/otpVerification`,\n      {\n        email: email,\n        otp: formData.otp,\n      }\n    );\n\n    localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n    toast.success(data.message);\n    if (!data.message) toast.success(data);\n    return { data };\n  } catch (error) {\n    if (error.response) toast.error(error.response.data);\n    return { error };\n  }\n}\n"]},"metadata":{},"sourceType":"module"}