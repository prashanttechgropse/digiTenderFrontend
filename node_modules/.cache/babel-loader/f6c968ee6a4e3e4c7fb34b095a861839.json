{"ast":null,"code":"import { apiendpoint } from \"../config.json\";\nimport httpService from \"./httpService\";\nimport { toast } from \"react-toastify\";\nexport async function setUpProfileService(formData) {\n  await httpService.post(`${apiendpoint}/setUpProfile`, formData);\n}\nexport async function authentication(formData) {\n  try {\n    const {\n      headers\n    } = await httpService.post(`${apiendpoint}/login`, {\n      email: formData.email,\n      password: formData.password\n    });\n    toast.success(success.data.message);\n    if (!success.data.message) toast.success(success.data);\n    localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\nexport async function createAccount(formData) {\n  try {\n    await httpService.post(`${apiendpoint}/register`, formData);\n    await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: formData.email\n    });\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\nexport async function otpVerification(formData, email) {\n  try {\n    const {\n      headers\n    } = await httpService.post(`${apiendpoint}/otpVerification`, {\n      email: email,\n      otp: formData.otp\n    });\n    console.log(headers);\n    return localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}","map":{"version":3,"sources":["/Users/prashantkansal/Desktop/techgropse/digiTender/digiTenderFrontend/src/services/registerServices.js"],"names":["apiendpoint","httpService","toast","setUpProfileService","formData","post","authentication","headers","email","password","success","data","message","localStorage","setItem","ex","response","error","createAccount","otpVerification","otp","console","log"],"mappings":"AAAA,SAASA,WAAT,QAA4B,gBAA5B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,OAAO,eAAeC,mBAAf,CAAmCC,QAAnC,EAA6C;AAClD,QAAMH,WAAW,CAACI,IAAZ,CAAkB,GAAEL,WAAY,eAAhC,EAAgDI,QAAhD,CAAN;AACD;AAED,OAAO,eAAeE,cAAf,CAA8BF,QAA9B,EAAwC;AAC7C,MAAI;AACF,UAAM;AAAEG,MAAAA;AAAF,QAAc,MAAMN,WAAW,CAACI,IAAZ,CAAkB,GAAEL,WAAY,QAAhC,EAAyC;AACjEQ,MAAAA,KAAK,EAAEJ,QAAQ,CAACI,KADiD;AAEjEC,MAAAA,QAAQ,EAAEL,QAAQ,CAACK;AAF8C,KAAzC,CAA1B;AAIAP,IAAAA,KAAK,CAACQ,OAAN,CAAcA,OAAO,CAACC,IAAR,CAAaC,OAA3B;AACA,QAAI,CAACF,OAAO,CAACC,IAAR,CAAaC,OAAlB,EAA2BV,KAAK,CAACQ,OAAN,CAAcA,OAAO,CAACC,IAAtB;AAC3BE,IAAAA,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,OAAO,CAAC,cAAD,CAArC;AACD,GARD,CAQE,OAAOQ,EAAP,EAAW;AACX,QAAIA,EAAE,CAACC,QAAP,EAAiBd,KAAK,CAACe,KAAN,CAAYF,EAAE,CAACC,QAAH,CAAYL,IAAxB;AAClB;AACF;AAED,OAAO,eAAeO,aAAf,CAA6Bd,QAA7B,EAAuC;AAC5C,MAAI;AACF,UAAMH,WAAW,CAACI,IAAZ,CAAkB,GAAEL,WAAY,WAAhC,EAA4CI,QAA5C,CAAN;AACA,UAAMH,WAAW,CAACI,IAAZ,CAAkB,GAAEL,WAAY,gBAAhC,EAAiD;AACrDQ,MAAAA,KAAK,EAAEJ,QAAQ,CAACI;AADqC,KAAjD,CAAN;AAGD,GALD,CAKE,OAAOO,EAAP,EAAW;AACX,QAAIA,EAAE,CAACC,QAAP,EAAiBd,KAAK,CAACe,KAAN,CAAYF,EAAE,CAACC,QAAH,CAAYL,IAAxB;AAClB;AACF;AAED,OAAO,eAAeQ,eAAf,CAA+Bf,QAA/B,EAAyCI,KAAzC,EAAgD;AACrD,MAAI;AACF,UAAM;AAAED,MAAAA;AAAF,QAAc,MAAMN,WAAW,CAACI,IAAZ,CACvB,GAAEL,WAAY,kBADS,EAExB;AACEQ,MAAAA,KAAK,EAAEA,KADT;AAEEY,MAAAA,GAAG,EAAEhB,QAAQ,CAACgB;AAFhB,KAFwB,CAA1B;AAOAC,IAAAA,OAAO,CAACC,GAAR,CAAYf,OAAZ;AACA,WAAOM,YAAY,CAACC,OAAb,CAAqB,OAArB,EAA8BP,OAAO,CAAC,cAAD,CAArC,CAAP;AACD,GAVD,CAUE,OAAOQ,EAAP,EAAW;AACX,QAAIA,EAAE,CAACC,QAAP,EAAiBd,KAAK,CAACe,KAAN,CAAYF,EAAE,CAACC,QAAH,CAAYL,IAAxB;AAClB;AACF","sourcesContent":["import { apiendpoint } from \"../config.json\";\nimport httpService from \"./httpService\";\nimport { toast } from \"react-toastify\";\n\nexport async function setUpProfileService(formData) {\n  await httpService.post(`${apiendpoint}/setUpProfile`, formData);\n}\n\nexport async function authentication(formData) {\n  try {\n    const { headers } = await httpService.post(`${apiendpoint}/login`, {\n      email: formData.email,\n      password: formData.password,\n    });\n    toast.success(success.data.message);\n    if (!success.data.message) toast.success(success.data);\n    localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n\nexport async function createAccount(formData) {\n  try {\n    await httpService.post(`${apiendpoint}/register`, formData);\n    await httpService.post(`${apiendpoint}/otpGeneration`, {\n      email: formData.email,\n    });\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n\nexport async function otpVerification(formData, email) {\n  try {\n    const { headers } = await httpService.post(\n      `${apiendpoint}/otpVerification`,\n      {\n        email: email,\n        otp: formData.otp,\n      }\n    );\n    console.log(headers);\n    return localStorage.setItem(\"token\", headers[\"x-auth-token\"]);\n  } catch (ex) {\n    if (ex.response) toast.error(ex.response.data);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}